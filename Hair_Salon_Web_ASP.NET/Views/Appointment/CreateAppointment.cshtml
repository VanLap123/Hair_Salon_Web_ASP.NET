@model Hair_Salon_Web_ASP.NET.Models.Appointment

@{
    ViewData["Title"] = "CreateAppointment";
}

<div class="row card align-content-center" style="background-color:lightgrey">
    <div class="col-md-4 card-body" style="background-color:#EEE8AA">
        <form asp-action="CreateAppointment">
            <h1 class="text-center text-black " style="font-size:35px; font-style:initial">Create Appointment</h1>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div data-mdb-input-init class="form-outline mb-4">
                <label class="control-label lable">Enter Customer Phone Number(*):</label>
                <input name="phoneNumber" placeholder="Customer Phone Number" class="form-control" />
            </div>
            <div data-mdb-input-init class="form-outline mb-4">
                <label class="control-label lable">Choose Service(*):</label>
                <select asp-for="ser_id" class="form-control" asp-items="ViewBag.ser_id">
                    <option value="">Select Service</option>
                </select>
                <span asp-validation-for="ser_id" class="text-danger"></span>
            </div>


            <div data-mdb-input-init class="form-outline mb-4">
                <label class="control-label lable">Choose Hairdresser(*):</label>
                <select asp-for="emp_id_chosen" class="form-control">
                    <option value="" selected>Select Hairdresser</option>
                    <option value="1">Chosen By Shop</option>
                    @{
                        foreach (User employee in (List<User>)ViewData["emp_list"])
                        {
                            <option value="@employee.user_id">@employee.name</option>
                        }
                    }

                </select>
                <span asp-validation-for="emp_id_chosen" class="text-danger"></span>
            </div>

            <div data-mdb-input-init class="form-outline mb-4">
                <label class="control-label lable">Choose Date(*):</label>
                <input type="date" asp-for="date" class="form-control" />
                <span asp-validation-for="date" class="text-danger"></span>
            </div>

            <div data-mdb-input-init class="form-outline mb-4">
                <label class="control-label lable">Choose Time(*):</label>
                <select asp-for="booking_time" class="form-control" id="timeDropdown">
                    <option value="">Select Time</option>
                    @{
                        List<string> availableTimes = new List<string> { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00" };
                        foreach (var time in availableTimes)
                        {
                            <option value="@time">@time</option>
                        }
                    }
                </select>
                <span asp-validation-for="booking_time" class="text-danger"></span>
            </div>


            <button type="submit" value="Create" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">
                Submit
            </button>
        </form>
    </div>
</div>
<script>
    // Bắt sự kiện khi người dùng thay đổi ngày
    document.getElementById("date").addEventListener("change", function () {
        // Lấy ngày được chọn
        var selectedDate = this.value;
        var empIdChosen = document.getElementById("emp_id_chosen").value;
        // Gọi phương thức GetBookedTimes trong controller bằng cách sử dụng AJAX
        get(selectedDate, empIdChosen)

    });

    document.getElementById("emp_id_chosen").addEventListener("change", function () {
        // Lấy ngày được chọn
        var empIdChosen = this.value;
        var selectedDate = document.getElementById("date").value;
        // Gọi phương thức GetBookedTimes trong controller bằng cách sử dụng AJAX
        get(selectedDate, empIdChosen)

    });

    function get(selectedDate, empIdChosen) {
        fetch('/Appointment/GetBookedTimes?selectedDate=' + selectedDate + '&empIdChosen=' + empIdChosen)
            .then(response => response.json())
            .then(bookedTimes => {
                // Đánh dấu các thời gian đã được đặt như là disabled trong dropdown
                var timeDropdown = document.getElementById("timeDropdown");
                var options = timeDropdown.options;

                for (var i = 0; i < options.length; i++) {

                    if (bookedTimes.includes(options[i].value)) {
                        options[i].disabled = true;
                        options[i].style.color = 'red'
                    } else {
                        options[i].disabled = false;
                        options[i].style.color = 'green'
                    }
                }
            });
    }

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
